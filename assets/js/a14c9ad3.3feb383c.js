"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[91],{7632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>r});const l=JSON.parse('{"id":"decex/permissioned_evm","title":"Permissioned Auto EVM","description":"Autonomys permissioned Ethereum runtimes","source":"@site/docs/decex/permissioned_evm.md","sourceDirName":"decex","slug":"/decex/permissioned_evm","permalink":"/protocol-specs/docs/decex/permissioned_evm","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"title":"Permissioned Auto EVM","hide_title":false,"sidebar_position":8,"description":"Autonomys permissioned Ethereum runtimes","keywords":["runtime","evm","ethereum","permissioned"],"last_update":{"date":"04/14/2025","author":"Teor"}},"sidebar":"tutorialSidebar","previous":{"title":"Cross-Domain Messaging (XDM)","permalink":"/protocol-specs/docs/decex/xdm"},"next":{"title":"Account nonce","permalink":"/protocol-specs/docs/account_nonce"}}');var i=t(4848),a=t(8453);const c={title:"Permissioned Auto EVM",hide_title:!1,sidebar_position:8,description:"Autonomys permissioned Ethereum runtimes",keywords:["runtime","evm","ethereum","permissioned"],last_update:{date:"04/14/2025",author:"Teor"}},s=void 0,o={},r=[{value:"Core Functionality",id:"core-functionality",level:2},{value:"Pallets",id:"pallets",level:2},{value:"Global Parameters",id:"global-parameters",level:2},{value:"Runtime Instance Parameters",id:"runtime-instance-parameters",level:2},{value:"Pallet Calls",id:"pallet-calls",level:2},{value:"pallet-domains",id:"pallet-domains",level:3},{value:"send_evm_domain_set_contract_creation_allowed_by_call",id:"send_evm_domain_set_contract_creation_allowed_by_call",level:4},{value:"pallet-evm-tracker",id:"pallet-evm-tracker",level:3},{value:"set_contract_creation_allowed_by",id:"set_contract_creation_allowed_by",level:4},{value:"Pallet Storage Items",id:"pallet-storage-items",level:2},{value:"pallet-domains",id:"pallet-domains-1",level:3},{value:"DomainRegistry",id:"domainregistry",level:4},{value:"EvmDomainContractCreationAllowedByCalls",id:"evmdomaincontractcreationallowedbycalls",level:4},{value:"pallet-evm-tracker",id:"pallet-evm-tracker-1",level:3},{value:"AccountNonce",id:"accountnonce",level:4},{value:"ContractCreationAllowedBy",id:"contractcreationallowedby",level:4}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:'A "permissioned" Auto EVM instance uses an allow list to limit which users can create contracts.\nAfter contract deployment, any user can call existing contracts.'}),"\n",(0,i.jsx)(n.h2,{id:"core-functionality",children:"Core Functionality"}),"\n",(0,i.jsx)(n.p,{children:"The pallet filters contract creation calls based on an Ethereum account ID allow list:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pallet-ethereum"})," calls are filtered by the signer of the self-contained call. This includes ",(0,i.jsx)(n.code,{children:"Legacy"}),", ",(0,i.jsx)(n.code,{children:"EIP1559"}),", and ",(0,i.jsx)(n.code,{children:"EIP2930"})," transactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pallet-evm"})," calls are filtered by the signer of the runtime call, which is typically the domain owner. This includes ",(0,i.jsx)(n.code,{children:"create"})," and ",(0,i.jsx)(n.code,{children:"create2"})," calls. If unsigned contract creation calls are permitted by other runtime settings, they are only allowed if the allow list is set to ",(0,i.jsx)(n.code,{children:"Anyone"}),". The ",(0,i.jsx)(n.code,{children:"source"})," field inside the transaction is ignored."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Contract calls nested within ",(0,i.jsx)(n.code,{children:"pallet-utility"})," calls  are allowed or rejected accurately, regardless of their nesting depth. (Nested transactions use some temporary memory, but don't use stack-based recursion.)"]}),"\n",(0,i.jsxs)(n.p,{children:["Rejected transactions have a custom error code ",(0,i.jsx)(n.code,{children:"ERR_CONTRACT_CREATION_NOT_ALLOWED"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Contract creation calls nested within ",(0,i.jsx)(n.code,{children:"pallet-domain-sudo"})," calls are rejected because they are not inherents."]}),"\n",(0,i.jsx)(n.h2,{id:"pallets",children:"Pallets"}),"\n",(0,i.jsx)(n.p,{children:"The Permissioned Auto EVM functionality is implemented via two runtime pallets:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EVMNoncetracker"}),": A custom pallet used to track EVM nonces, and the EVM contract creation allow list. The crate is called ",(0,i.jsx)(n.code,{children:"pallet-evm-tracker"}),", but existing runtimes keep the ",(0,i.jsx)(n.code,{children:"EVMNoncetracker"})," name to preserve their storage names."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Domains"}),": The ",(0,i.jsx)(n.code,{children:"send_evm_domain_set_contract_creation_allowed_by_call"})," in ",(0,i.jsx)(n.code,{children:"pallet-domains"})," can be used by sudo or the domain owner to change the allow list on Permissioned EVMs."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"pallet-evm-tracker"})," depends on some upstream pallets:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Ethereum"}),": Ethereum-compatible transactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EVM"}),": An EVM hosted on Substrate, using a Substrate-specific transaction format."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"global-parameters",children:"Global Parameters"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"None"})}),"\n",(0,i.jsx)(n.h2,{id:"runtime-instance-parameters",children:"Runtime Instance Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"DomainConfig"})," can be used to configure the initial contract creation allow list. The relevant parameter is:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"DomainConfig"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"domain_runtime_config"}),": configurations that are specific to each domain type:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Evm"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Public"}),": a public EVM where the contract creation allow list can't be changed (even by the domain owner or sudo)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Private { initial_contract_creation_allow_list }"}),': A Permissioned EVM, with the accounts that are initially allowed to create contracts on this EVM domain. (It is called "Private" for backwards compatibility.)']}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The default configuration is ",(0,i.jsx)(n.code,{children:"Public"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"pallet-calls",children:"Pallet Calls"}),"\n",(0,i.jsx)(n.h3,{id:"pallet-domains",children:"pallet-domains"}),"\n",(0,i.jsx)(n.h4,{id:"send_evm_domain_set_contract_creation_allowed_by_call",children:"send_evm_domain_set_contract_creation_allowed_by_call"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"send_evm_domain_set_contract_creation_allowed_by_call(domain_id, contract_creation_allowed_by)"})}),"\n",(0,i.jsx)(n.p,{children:"The sudo account or domain owner can replace the current contract creation allow list with a new list. This list applies to future contract creation transactions."}),"\n",(0,i.jsx)(n.p,{children:"Existing contracts remain deployed, even if they were created by accounts that are no longer in the allow list."}),"\n",(0,i.jsx)(n.h3,{id:"pallet-evm-tracker",children:"pallet-evm-tracker"}),"\n",(0,i.jsx)(n.h4,{id:"set_contract_creation_allowed_by",children:"set_contract_creation_allowed_by"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"set_contract_creation_allowed_by(contract_creation_allowed_by)"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"send_evm_domain_set_contract_creation_allowed_by_call"})," is turned into an inherent, which updates the pallet storage via this call."]}),"\n",(0,i.jsx)(n.h2,{id:"pallet-storage-items",children:"Pallet Storage Items"}),"\n",(0,i.jsx)(n.h3,{id:"pallet-domains-1",children:"pallet-domains"}),"\n",(0,i.jsx)(n.h4,{id:"domainregistry",children:"DomainRegistry"}),"\n",(0,i.jsxs)(n.p,{children:["Used to check if the domain is a Permissioned EVM, before accepting the ",(0,i.jsx)(n.code,{children:"send_evm_domain_set_contract_creation_allowed_by_call"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Also holds the ",(0,i.jsx)(n.code,{children:"initial_contract_creation_allow_list"}),", which is applied to Permissioned EVM domain storage at domain instantiation."]}),"\n",(0,i.jsx)(n.h4,{id:"evmdomaincontractcreationallowedbycalls",children:"EvmDomainContractCreationAllowedByCalls"}),"\n",(0,i.jsxs)(n.p,{children:["Temporary storage for the ",(0,i.jsx)(n.code,{children:"send_evm_domain_set_contract_creation_allowed_by_call"})," in this block, if there is one."]}),"\n",(0,i.jsx)(n.h3,{id:"pallet-evm-tracker-1",children:"pallet-evm-tracker"}),"\n",(0,i.jsx)(n.h4,{id:"accountnonce",children:"AccountNonce"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AccountNonce"})," is used to track Ethereum account nonces. (It is not used in implementing Permissioned EVMs.)"]}),"\n",(0,i.jsx)(n.h4,{id:"contractcreationallowedby",children:"ContractCreationAllowedBy"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ContractCreationAllowedBy"})," is a list of accounts that are allowed to create contracts."]}),"\n",(0,i.jsx)(n.p,{children:"It has two variants:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Anyone"}),": any account can create signed contracts, and unsigned contract creation is allowed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Accounts(list)"}),": a list of Ethereum Account IDs that can create contracts. If the list is empty, all contract creation transactions are rejected."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var l=t(6540);const i={},a=l.createContext(i);function c(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);