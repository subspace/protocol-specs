"use strict";(self.webpackChunkportal=self.webpackChunkportal||[]).push([[832],{3864:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var i=n(7624),a=n(2172),t=n(4916);const l={title:"Workflow",sidebar_position:4,description:"Complete workflow of domain operation.",keywords:["execution","decex","instantiation"],last_update:{date:"10/03/2024",author:"Dariia Porechna"}},r=void 0,c={id:"decex/workflow",title:"Workflow",description:"Complete workflow of domain operation.",source:"@site/docs/decex/workflow.md",sourceDirName:"decex",slug:"/decex/workflow",permalink:"/protocol-specs/docs/decex/workflow",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Workflow",sidebar_position:4,description:"Complete workflow of domain operation.",keywords:["execution","decex","instantiation"],last_update:{date:"10/03/2024",author:"Dariia Porechna"}},sidebar:"tutorialSidebar",previous:{title:"Bundles and Domain Blocks",permalink:"/protocol-specs/docs/decex/bundles_blocks"},next:{title:"Staking",permalink:"/protocol-specs/docs/decex/staking"}},o={},d=[{value:"Domain Instantiation &amp; Upgrades",id:"domain-instantiation--upgrades",level:2},{value:"Domain Instance Genesis Block Generation",id:"domain-instance-genesis-block-generation",level:2},{value:"Domain Instance Node Bootstrap",id:"domain-instance-node-bootstrap",level:2},{value:"Domain Genesis Config",id:"domain-genesis-config",level:2},{value:"Domain Runtime Upgrades",id:"domain-runtime-upgrades",level:2},{value:"Bundle Producer Election",id:"bundle-producer-election",level:2},{value:"Domain Bundle Production",id:"domain-bundle-production",level:2},{value:"Transaction Selection for Bundle Production",id:"transaction-selection-for-bundle-production",level:2},{value:"Initial Domain Bundle Verification by Consensus Nodes",id:"initial-domain-bundle-verification-by-consensus-nodes",level:2},{value:"Bundle Equivocation",id:"bundle-equivocation",level:3},{value:"Consensus Block Verification",id:"consensus-block-verification",level:2},{value:"Bundle Header Application",id:"bundle-header-application",level:2},{value:"Domain Epoch Transition",id:"domain-epoch-transition",level:2},{value:"Domain Block Production",id:"domain-block-production",level:2},{value:"Cryptographic sortition for Extrinsic ordering",id:"cryptographic-sortition-for-extrinsic-ordering",level:3},{value:"Fork Choice Rule",id:"fork-choice-rule",level:3},{value:"Domain Block Execution on the Operator Node",id:"domain-block-execution-on-the-operator-node",level:2},{value:"Domain Sudo",id:"domain-sudo",level:2},{value:"Flow to execute a Sudo call on Domain.",id:"flow-to-execute-a-sudo-call-on-domain",level:3},{value:"Lagging operator protection",id:"lagging-operator-protection",level:2},{value:"Domain Freeze, Unfreeze, and Prune Execution Receipt by Consensus Sudo",id:"domain-freeze-unfreeze-and-prune-execution-receipt-by-consensus-sudo",level:2}];function h(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",mstyle:"mstyle",msub:"msub",msup:"msup",mtext:"mtext",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,a.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h2,{id:"domain-instantiation--upgrades",children:"Domain Instantiation & Upgrades"}),"\n",(0,i.jsxs)(s.p,{children:["When a new domain is instantiated, the consensus runtime generates a genesis ER hash using the ",(0,i.jsx)(s.code,{children:"genesis_config"})," and ",(0,i.jsx)(s.code,{children:"domain_config"})," for that domain."]}),"\n",(0,i.jsx)(s.p,{children:"The consensus chain will initiate a \u201cbalance\u201d for this domain to track how many SSC were transferred in and out of this domain to make sure a domain cannot create SSC it did not already have via fees, XDM transfers or storage fee deposits. This balance does not include staked SSC as staking is tracked on the consensus chain directly."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"genesis_receipt_hash"})," is derived using a host function call passing the required genesis ",(0,i.jsx)(s.code,{children:"domain_config"})," details mentioned below. The host function will construct the ",(0,i.jsx)(s.code,{children:"DomainConfig"})," using the domain runtime and create the genesis ER by deriving the ",(0,i.jsx)(s.code,{children:"genesis_state_root"}),", presented ",(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/blob/689da495a0c0c0c2466fe90a9ea187ce56760f2d/client/chain-spec/src/genesis.rs#L134",children:"here"}),", and returning the ",(0,i.jsx)(s.code,{children:"genesis_receipt_hash"}),". This ER will not have any intermediate state roots, but only the final state root, as Genesis ER is considered special."]}),"\n",(0,i.jsxs)(s.p,{children:["Operators who want to run this domain will create a genesis block using the ",(0,i.jsx)(s.code,{children:"GenesisConfig"})," placed on the consensus chain during domain instantiation and construct the genesis ER used when submitting the next block\u2019s ER thereby building a block tree."]}),"\n",(0,i.jsx)(s.h2,{id:"domain-instance-genesis-block-generation",children:"Domain Instance Genesis Block Generation"}),"\n",(0,i.jsxs)(s.p,{children:["When the domain is first instantiated in the consensus runtime, a ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," is derived using a host function with ",(0,i.jsx)(s.code,{children:"domain_config"})," as input, the ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," will be further used to drive a genesis ER which will not have any intermediate state roots, only the final state root, as Genesis ER is considered special."]}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," is required to be unique among all domain instances and consistent with the ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," generated by the domain instance node on the client side. The host function and the domain instance node derive ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," by generating a genesis block with ",(0,i.jsx)(s.code,{children:"RuntimeGenesisConfig"})," as input, thus, to achieve uniqueness and consistency, the ",(0,i.jsx)(s.code,{children:"RuntimeGenesisConfig"})," needs to be unique and consistent."]}),"\n",(0,i.jsxs)(s.p,{children:["For all domain runtime types, ",(0,i.jsx)(s.code,{children:"RuntimeGenesisConfig"})," should include the pallet genesis config of:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["system pallet ",(0,i.jsx)(s.code,{children:"SystemConfig { code }"})," for it to be a valid ",(0,i.jsx)(s.code,{children:"RuntimeGenesisConfig"})]}),"\n",(0,i.jsxs)(s.li,{children:["domain-id pallet  ",(0,i.jsx)(s.code,{children:"DomainIdConfig { domain_id }"})," for it to be unique as it includes a unique ",(0,i.jsx)(s.code,{children:"domain_id"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"domain-instance-node-bootstrap",children:"Domain Instance Node Bootstrap"}),"\n",(0,i.jsxs)(s.p,{children:["After the operator instantiated a domain instance at the consensus chain by submitting an ",(0,i.jsx)(s.code,{children:"instantiate_domain"})," extrinsic and waiting until the extrinsic is finalized (past the ",(0,i.jsx)(s.code,{children:"CONFIRMATION_DEPTH_K"})," consensus blocks), the operator can use the resulting domain instance ",(0,i.jsx)(s.code,{children:"domain_id"})," and ",(0,i.jsx)(s.code,{children:"created_at"})," (block height) arguments to the ",(0,i.jsx)(s.code,{children:"subspace-node"})," binary to run a domain instance node for the instantiated domain."]}),"\n",(0,i.jsx)(s.p,{children:"The domain instance node has two modes: bootstrap mode and sync mode. In the bootstrap mode, the node must bootstrap the domain instance chain by itself based on the domain registry state at the consensus chain. The node can sync the chain from other domain instance nodes in sync mode."}),"\n",(0,i.jsx)(s.p,{children:"In bootstrap mode, there is an embedded consensus node and a bootstrapper. After the bootstrap is finished, a domain node will replace the bootstrapper."}),"\n",(0,i.jsxs)(s.p,{children:["The bootstrapper listens to the consensus node block import event, skips the block before ",(0,i.jsx)(s.code,{children:"created_at"}),", after the block at ",(0,i.jsx)(s.code,{children:"created_at"})," is imported, which contains the ",(0,i.jsx)(s.code,{children:"instantiate_domain"})," extrinsic of the domain instance, using runtime API with ",(0,i.jsx)(s.code,{children:"domain_id"})," to get the domain instance\u2019s ",(0,i.jsx)(s.code,{children:"domain_config"})," and the ",(0,i.jsx)(s.code,{children:"runtime_obj"})," state."]}),"\n",(0,i.jsxs)(s.p,{children:["Uses the ",(0,i.jsx)(s.code,{children:"domain_config"})," and ",(0,i.jsx)(s.code,{children:"runtime_obj.domain_runtime_code"})," to generate a ",(0,i.jsx)(s.code,{children:"RuntimeGenesisConfig"})," in the same way as ",(0,i.jsx)(s.a,{href:"#domain-instance-genesis-block-generation",children:"the host function"}),", and uses that to construct ",(0,i.jsx)(s.code,{children:"sc_service::Configuration"})," (which includes the ",(0,i.jsx)(s.code,{children:"chain_spec"}),") then use ",(0,i.jsx)(s.code,{children:"runtime_obj.runtime_type"})," to determine and build the desired domain service with ",(0,i.jsx)(s.code,{children:"sc_service::Configuration"})," as input. After this step the domain service is up and the bootstrap is finished."]}),"\n",(0,i.jsx)(t.c,{title:"Note",children:(0,i.jsxs)(s.p,{children:["The domain service included a native runtime that may have a newer runtime version than the wasm runtime ",(0,i.jsx)(s.code,{children:"domain_runtime_code"})," as the user may use a newer release of ",(0,i.jsx)(s.code,{children:"subspace-node"})," to bootstrap the domain instance, in this case we should prioritize the wasm runtime execution result. And also recommend the user use sync mode when possible."]})}),"\n",(0,i.jsx)(s.h2,{id:"domain-genesis-config",children:"Domain Genesis Config"}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.code,{children:"domain_config"})," contains:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"domain_name"}),": user-defined name for this domain."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"runtime_id"}),": domain runtime type that exists in ",(0,i.jsx)(s.code,{children:"RuntimeRegistry"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"domain_id"}),": identifier assigned to an instance of the domain."]}),"\n",(0,i.jsxs)(s.li,{children:["specific configuration items, such as:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"bundle_slot_probability"}),": the number of successful bundle expected to be produced in a slot (active slots coefficient); defines the expected number of bundles in the consensus block. Must be ",(0,i.jsx)(s.code,{children:"> 0"})," and ",(0,i.jsx)(s.code,{children:"<= 1"}),", recommended value ",(0,i.jsx)(s.code,{children:"1"})," ."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"max_bundle_size"}),": the max bundle size for this domain; may not exceed the system-wide ",(0,i.jsx)(s.code,{children:"MaxDomainBlockSize"})," limit; The average domain block size is then expected to be below ",(0,i.jsx)(s.code,{children:"bundle_slot_probability * max_bundle_size / SLOT_PROBABILITY"})," on average."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"max_bundle_weight"}),": the max bundle weight for this domain; may not exceed the system-wide ",(0,i.jsx)(s.code,{children:"MaxDomainBlockWeight"})," limit; The average domain block weight is then expected to be below ",(0,i.jsx)(s.code,{children:"bundle_slot_probability * max_bundle_weight / SLOT_PROBABILITY"})," on average."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"allowlist"}),": list of addresses allowed to run operators on this domain"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"initial_balances"}),": list of initial balances on domain accounts"]}),"\n",(0,i.jsxs)(s.li,{children:["Any further genesis config details can be included as required and be passed down. These specific genesis details ensure the ",(0,i.jsx)(s.code,{children:"genesis_state_root"})," is unique for each instantiated domain and thereby making ",(0,i.jsx)(s.code,{children:"genesis_er_hash"})," unique across different instances of the same domain runtime."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"domain-runtime-upgrades",children:"Domain Runtime Upgrades"}),"\n",(0,i.jsxs)(s.p,{children:["When a domain runtime is updated using ",(0,i.jsx)(s.code,{children:"upgrade_domain_runtime"}),", the new runtime will come into effect at a future consensus chain block, specifically, the block at which the extrinsic ",(0,i.jsx)(s.code,{children:"upgrade_domain_runtime"})," was executed successfully and ",(0,i.jsx)(s.code,{children:"DomainRuntimeUpgradeDelay"})," blocks have passed since. When that future block height arrives, the consensus chain considers the new runtime to be the latest runtime and adds a digest log to indicate the upgrade to all domain operators."]}),"\n",(0,i.jsx)(s.p,{children:"Since every operator runs the consensus chain, they will include the new runtime as part of the next domain block taken from the consensus chain, since they see the digest log in the consensus block header."}),"\n",(0,i.jsx)(s.p,{children:"There are some scenarios where new runtime may introduce the new host APIs that newer clients will use during any stage of bundle production and block import. If the operators still use the older clients, they won\u2019t be able to proceed and the clients are supposed to panic due to the usage of missing host APIs in the new runtime. Hence, every operator would be forced to update the client in this case. The upgrade process involves running the latest client in place of the older client. While it's not strictly necessary, it would be beneficial to automatically signal the outdated client to operators later."}),"\n",(0,i.jsx)(s.h2,{id:"bundle-producer-election",children:"Bundle Producer Election"}),"\n",(0,i.jsxs)(s.p,{children:["For each time slot, each operator denoted with ",(0,i.jsx)(s.code,{children:"operator_id"})," participates in the slot leader election for the domain ",(0,i.jsx)(s.code,{children:"domain_id"})," they are staking on to determine whether they are eligible to produce a bundle in this slot, as follows:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Initialization"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Get the ",(0,i.jsx)(s.code,{children:"global_challenge"})," for this slot from the Proof-of-Time chain."]}),"\n",(0,i.jsxs)(s.li,{children:["Retrieve ",(0,i.jsx)(s.code,{children:"secret_key"})," from keystore."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"VRF"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Make ",(0,i.jsx)(s.code,{children:"transcript"})," for the VRF from the ",(0,i.jsx)(s.code,{children:"global_challenge"})," and VRF label for this ",(0,i.jsx)(s.code,{children:"domain_id"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Generate a VRF signature by applying the VRF to the ",(0,i.jsx)(s.code,{children:"global_challenge"})," and the operator's private key as ",(0,i.jsx)(s.code,{children:"vrf_signature = vrf_sign(secret_key, transcript)"}),". The VRF signature contains a ",(0,i.jsx)(s.code,{children:"vrf_signature.proof"}),", which can be used by others to verify that the VRF ",(0,i.jsx)(s.code,{children:"vrf_signature.output"})," was correctly generated without knowing the operator\u2019s private key."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Threshold Check"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Compute the ",(0,i.jsx)(s.code,{children:"threshold"})," based on the operators ",(0,i.jsx)(s.code,{children:"operator_stake = current_total_stake"})," in ",(0,i.jsx)(s.code,{children:"Operators"})," registry for this domain proportionally to the ",(0,i.jsx)(s.code,{children:"total_domain_stake = current_total_stake"})," of all operators of this domain in ",(0,i.jsx)(s.code,{children:"stake_summary"})," of the ",(0,i.jsx)(s.code,{children:"DomainRegistry"})," as\n",(0,i.jsx)(s.code,{children:"threshold = MAX * (operator_stake / total_domain_stake) * bundle_slot_probability"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Example"}),"\n",(0,i.jsxs)(s.p,{children:["If ",(0,i.jsx)(s.code,{children:"threshold"})," is stored in ",(0,i.jsx)(s.code,{children:"u128"}),", then ",(0,i.jsx)(s.code,{children:"MAX"})," is ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsxs)(s.msup,{children:[(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mn,{children:"128"})]}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"2^{128}-1"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8974em",verticalAlign:"-0.0833em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord",children:"2"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsx)(s.span,{className:"vlist-t",children:(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"128"})})})]})})})})})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1"})]})]})]}),". If the operator has ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"10"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"1/10"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord",children:"1/10"})]})})]})," of total stake in this domain, according to the formula above they should check whether their VRF output numeric values is below ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsxs)(s.msup,{children:[(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mn,{children:"128"})]}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"10"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"2^{128}/10"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord",children:"2"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsx)(s.span,{className:"vlist-t",children:(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"128"})})})]})})})})})]}),(0,i.jsx)(s.span,{className:"mord",children:"/10"})]})})]}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Check whether the VRF ",(0,i.jsx)(s.code,{children:"vrf_signature.output"})," for a slot is strictly below (",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mstyle,{mathcolor:"#cc0000",children:(0,i.jsx)(s.mtext,{children:"\\<"})})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"\\<"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord text",style:{color:"#cc0000"},children:(0,i.jsx)(s.span,{className:"mord",style:{color:"#cc0000"},children:"\\<"})})]})})]}),") the ",(0,i.jsx)(s.code,{children:"threshold"})," as integers."]}),"\n",(0,i.jsxs)(s.li,{children:["If it is, the operator is a slot leader for that slot and can produce a bundle. They should generate a ",(0,i.jsx)(s.code,{children:"ProofOfElection"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"If it isn\u2019t, they skip this slot"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"domain-bundle-production",children:"Domain Bundle Production"}),"\n",(0,i.jsxs)(s.p,{children:["If, for this time slot, this operator was successfully elected a slot leader, they can produce a bundle (as ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/bundles_blocks#bundles",children:"defined"}),") as follows:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Take the ",(0,i.jsx)(s.code,{children:"ProofOfElection"})," of the slot leader."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Fetch the ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," for the last block executed locally from the domain client and attach it to the bundle header. This ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," must be based on the longest branch of the consensus chain, although it may not point to the tip of the chain, as this depends on when the last bundle for this domain was included in a consensus chain block. If there was a fraud detected at the same height, the locally produced ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," (if valid) will be replacing the fraudulent one in the BlockTree."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Attach the full ",(0,i.jsx)(s.code,{children:"execution_trace"})," to the given ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Grab all extrinsics within the specified ",(0,i.jsx)(s.a,{href:"#transaction-selection-for-bundle-production",children:"range"})," ",(0,i.jsx)(s.code,{children:"tx_range"})," and attach to the body."]}),"\n",(0,i.jsx)(s.p,{children:"If there is no extrinsic, the operator will skip producing a bundle and the following steps (TODO when challenge period is redefined in consensus blocks.)"}),"\n",(0,i.jsx)(s.p,{children:"(Currently) If there is no extrinsic, the operator will further look into the block tree"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"If all domain blocks in the challenge period are empty blocks then the operator will skip producing an empty bundle thus skipping the following steps"}),"\n",(0,i.jsx)(s.li,{children:"If there's a non-empty domain block in the challenge period, the operator will continue the following step to produce an empty bundle to derive the non-empty domain block out of the challenge period (accelerate confirmation time)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Compute the ",(0,i.jsx)(s.code,{children:"bundle_extrinsics_root"})," and attach to the header."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Compute the ",(0,i.jsx)(s.code,{children:"bundle_size"})," and ",(0,i.jsx)(s.code,{children:"estimated_bundle_weight"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Note the storage fees to be paid to the consensus block author as per ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/fees_and_rewards/#bundle-storage-fees",children:"Bundle Storage Fees"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Sign the bundle header."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Build the bundle header as ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/bundles_blocks#bundle-header",children:"described"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Broadcast the full bundle over the consensus network."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"transaction-selection-for-bundle-production",children:"Transaction Selection for Bundle Production"}),"\n",(0,i.jsxs)(t.c,{title:"Note",children:[(0,i.jsxs)(s.p,{children:["There are ",(0,i.jsx)(s.code,{children:"n = 2^256 = U256::MAX"})," possible values for tx sender. Let ",(0,i.jsx)(s.code,{children:"x"})," be the size of the range chosen by each operator. The probability of a random tx being outside the range of an operator at any given slot is ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mi,{children:"n"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"(n-x)/n"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mord",children:"/"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})]})]}),". The probability of that happening for 10 slots is ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsxs)(s.msup,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mn,{children:"10"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"((n-x)/n)^{10}"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"(("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mord",children:"/"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsxs)(s.span,{className:"mclose",children:[(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsx)(s.span,{className:"vlist-t",children:(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"10"})})})]})})})})})]})]})]})]}),".  If we set ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"x"}),(0,i.jsx)(s.mo,{children:"="}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"3"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"x=n/3"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"x"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"="}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord",children:"/3"})]})]})]}),", the probability of a tx not being included within 10 slots is ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mo,{stretchy:"false",children:"("}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"\u2212"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mn,{children:"3"}),(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"/"}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsxs)(s.msup,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:")"}),(0,i.jsx)(s.mn,{children:"10"})]}),(0,i.jsx)(s.mo,{children:"\u2248"}),(0,i.jsx)(s.mn,{children:"0.017"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"((n - n/3)/n)^{10} \\approx 0.017"})]})})}),(0,i.jsxs)(s.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"(("}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(s.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(s.span,{className:"mord",children:"/3"}),(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"mord",children:"/"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"}),(0,i.jsxs)(s.span,{className:"mclose",children:[(0,i.jsx)(s.span,{className:"mclose",children:")"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsx)(s.span,{className:"vlist-t",children:(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(s.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"10"})})})]})})})})})]}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(s.span,{className:"mrel",children:"\u2248"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(s.span,{className:"mord",children:"0.017"})]})]})]}),". Thus, setting the tx range to ",(0,i.jsx)(s.code,{children:"U256::MAX/3"})," gives ~98.2% probability of tx being included within 10 slots."]}),(0,i.jsxs)(s.p,{children:["If we want it cleared within 6 slots (with a probability of 98.4%), we should set the range to ",(0,i.jsx)(s.code,{children:"U256::MAX/2"})]})]}),"\n",(0,i.jsxs)(s.p,{children:["When an operator is elected to produce a bundle, they must select transactions to be included in that bundle according to their transaction pool range (",(0,i.jsx)(s.code,{children:"TX_RANGE"}),"), as follows:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Compute ",(0,i.jsx)(s.code,{children:"slot_vrf_hash"})," for this slot as ",(0,i.jsx)(s.code,{children:"hash(vrf_signature.output)"})]}),"\n",(0,i.jsxs)(s.li,{children:["Identify txs for inclusion into the bundle for this slot by looking into the transaction pool and identify all transactions whose senders ",(0,i.jsx)(s.code,{children:"account_id"})," (as integer), is within the range as ",(0,i.jsx)(s.code,{children:"bidirectional_distance(slot_vrf_hash, public_key_hash) <= TX_RANGE/2"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The operator may only include as many transactions within this range as fit within the bundle ",(0,i.jsx)(s.code,{children:"max_bundle_weight"})," and ",(0,i.jsx)(s.code,{children:"max_bundle_size"})," ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/bundles_blocks#bundle-limits",children:"limits"})," for this domain."]}),"\n",(0,i.jsx)(s.h2,{id:"initial-domain-bundle-verification-by-consensus-nodes",children:"Initial Domain Bundle Verification by Consensus Nodes"}),"\n",(0,i.jsx)(s.p,{children:"All consensus nodes will perform the following verification when a new bundle is received over the network. All valid bundles are added to the local extrinsics pool and propagated to all peers on the network. Any invalid bundles are not added to the pool (no fraud proofs for invalid bundles received, only fraud proofs for invalid bundles that are included in a block)."}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensure ",(0,i.jsx)(s.code,{children:"HeadDomainNumber - HeadReceiptNumber = 1"})," otherwise ",(0,i.jsx)(s.code,{children:"submit_receipt"})," is expected instead of ",(0,i.jsx)(s.code,{children:"submit_bundle"})]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"domain_id"})," is in the ",(0,i.jsx)(s.code,{children:"DomainRegistry"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"ProofOfElection"})," for this domain and operator.","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensure the ",(0,i.jsx)(s.code,{children:"slot_number"})," is no older than the slot of the block ",(0,i.jsx)(s.code,{children:"current_block_number - BundleLongevity"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"slot_number"})," and the ",(0,i.jsx)(s.code,{children:"proof_of_time"})," is correctly computed."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"vrf_signature"})," based on the operator signing key and the global challenge that is derived from the ",(0,i.jsx)(s.code,{children:"slot_number"})," and the ",(0,i.jsx)(s.code,{children:"proof_of_time"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"vrf_signature"})," is below the threshold that is derived from the ",(0,i.jsx)(s.code,{children:"operator_stake / total_domain_stake"})," and the ",(0,i.jsx)(s.code,{children:"bundle_slot_probability"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the bundle header ",(0,i.jsx)(s.code,{children:"signature"})," for the registered domain operator."]}),"\n",(0,i.jsxs)(s.li,{children:["Ensure the bundle does not exceed the bundle ",(0,i.jsx)(s.code,{children:"max_bundle_weight"})," and ",(0,i.jsx)(s.code,{children:"max_bundle_size"})," ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/bundles_blocks#bundle-limits",children:"limits"})," for this domain."]}),"\n",(0,i.jsxs)(s.li,{children:["Ensure the bundle is well-formed:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"execution_trace_root"})," is correctly computed for the ",(0,i.jsx)(s.code,{children:"execution_trace"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"bundle_extrinsics_root"})," is correctly computed for all included extrinsics."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"bundle_size"})," and ",(0,i.jsx)(s.code,{children:"estimated_bundle_weight"})," were correctly computed for the bundle body."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Ensure the ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," builds on the head of current ",(0,i.jsx)(s.code,{children:"BlockTree"})," for this domain.","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Verify ",(0,i.jsx)(s.code,{children:"domain_block_number"})," is equal to:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"HeadReceiptNumber + 1"})," if this is the first bundle of the domain in the block"]}),"\n",(0,i.jsxs)(s.li,{children:["or ",(0,i.jsx)(s.code,{children:"HeadReceiptNumber"})," since ",(0,i.jsx)(s.code,{children:"HeadReceiptNumber"})," is increased by the previous bundle in the block"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Verify the ",(0,i.jsx)(s.code,{children:"consensus_block_hash"})," exists at the specified ",(0,i.jsx)(s.code,{children:"consenus_block_height"})," on the consensus client."]}),"\n",(0,i.jsxs)(s.li,{children:["Based on ",(0,i.jsx)(s.code,{children:"parent_domain_receipt_hash"}),", verify the ",(0,i.jsx)(s.code,{children:"parent_domain_block"})," exists at the specified ",(0,i.jsx)(s.code,{children:"parent_domain_height"})," within the ",(0,i.jsx)(s.code,{children:"BlockTree"})," on the operator client. If the ER is beyond the ",(0,i.jsx)(s.code,{children:"BlockTreePruningDepth"})," it is too old and will simply be ignored."]}),"\n",(0,i.jsxs)(s.li,{children:["Verify all ",(0,i.jsx)(s.code,{children:"block_extrinsics_roots"})," exist within the ",(0,i.jsx)(s.code,{children:"execution_inbox"})," of the ",(0,i.jsx)(s.code,{children:"parent_domain_block"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"bundle-equivocation",children:"Bundle Equivocation"}),"\n",(0,i.jsxs)(s.p,{children:["A dishonest operator may produce multiple bundles on the same slot with the same proof-of-election. Similar to ",(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/blob/689da495a0c0c0c2466fe90a9ea187ce56760f2d/client/consensus/slots/src/aux_schema.rs#L53",children:"how consensus block equivocation is addressed"}),", consensus chain nodes perform a check to determine if a bundle has been equivocated when verifying its validity. If an equivocation is detected, then this bundle is invalid, and is not included in the block."]}),"\n",(0,i.jsx)(s.h2,{id:"consensus-block-verification",children:"Consensus Block Verification"}),"\n",(0,i.jsx)(s.p,{children:"On receipt of a new consensus block, each consensus node now needs to check to ensure all included bundle headers were pre-validated locally. If they see a new bundle, they will request and run validation. If that bundle is invalid or any previously invalidated bundles are included in the farmer block, it is simply discarded and ignored."}),"\n",(0,i.jsx)(s.h2,{id:"bundle-header-application",children:"Bundle Header Application"}),"\n",(0,i.jsxs)(s.p,{children:["On execution of a new consensus block, all included bundles will be applied to the state of ",(0,i.jsx)(s.code,{children:"pallet_domains"})," as each included bundle header will call ",(0,i.jsx)(s.code,{children:"submit_bundle"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"For each new bundle, each consensus node will:"}),"\n",(0,i.jsx)(t.c,{title:"Only accept the bundles pointing to the last consensus block number from which a domain block is derived.",children:(0,i.jsx)(s.p,{children:"All bundles included in a consensus block may be invalid due to the network delay. In such a scenario, the fraud proof from the honest operator may not have arrived yet, allowing the malicious operator to continue building the domain chain and submitting bad bundles. This constraint implies that they cannot submit bundles once the honest operators detect the receipt disagreement. Instead, they can only submit a fraud proof to challenge the bad receipt. During this period, the dishonest operator may continue extending the fraudulent branch until they are pruned by the fraud proof provided by the honest operator."})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Extract the ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})]}),"\n",(0,i.jsxs)(s.li,{children:["Retrieve the ",(0,i.jsx)(s.code,{children:"parent_domain_block"})," from the ",(0,i.jsx)(s.code,{children:"BlockTree"})," and conditionally update the tree. If the parent does not exist within the tree, this ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," has just expired (rare event) and is simply ignored."]}),"\n",(0,i.jsxs)(s.li,{children:["If this is a new ER, we will extend the ",(0,i.jsx)(s.code,{children:"BlockTree"}),". If no fraud has occurred, it will extend the tip of the longest branch.","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Add a new layer to the tree, inserting the ER as the first entry as a new ",(0,i.jsx)(s.code,{children:"DomainBlock"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Add the ",(0,i.jsx)(s.code,{children:"bundle_extrinsics_root"})," to the ",(0,i.jsx)(s.code,{children:"execution_inbox"})]}),"\n",(0,i.jsxs)(s.li,{children:["Add the ",(0,i.jsx)(s.code,{children:"operator_id"})," to the ",(0,i.jsx)(s.code,{children:"operator_ids"})," who submitted this ER"]}),"\n",(0,i.jsx)(s.li,{children:"Apply XDM coin transfers to the domain\u2019s balance"}),"\n",(0,i.jsxs)(s.li,{children:["Apply all operator fees from the ER for the domain block for which the challenge period has now passed:","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The compute fees should be divided equally between all operators in the ",(0,i.jsx)(s.code,{children:"operator_ids"})," field for the parent ",(0,i.jsx)(s.code,{children:"DomainBlock"})," in the ",(0,i.jsx)(s.code,{children:"BlockTree"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"The compute fees are automatically staked and subtracted from domain\u2019s balance."}),"\n",(0,i.jsxs)(s.li,{children:["The storage fees should be refunded to the bundle authors of bundles included in the confirmed block. These should be applied individually to their ",(0,i.jsx)(s.code,{children:"current_epoch_reward"})," in the ",(0,i.jsx)(s.code,{children:"OperatorPool"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Otherwise, reject the receipt that tries to create new branch in the block tree. If fraud has occurred, a new branch will not be created. Instead, the system requires the submission of a fraud proof to prune the fraudulent ER at the specific height before any new ER can be submitted at that height. Fraud verification is not handled here as the consensus node cannot determine which (or all) ",(0,i.jsx)(s.code,{children:"ExecutionReceipt"})," is actually fraudulent at this level. It is implied that an honest operator will eventually submit a fraud proof to address the issue before submitting new ER. If the fraud proof for the receipt already present in the block tree has already been seen, then it's operators are marked as pending slashing and the new receipt will create a new head as described in step 3."]}),"\n",(0,i.jsxs)(s.li,{children:["If this ER has already been seen, we will be confirming an existing entry within the block tree. Retrieve the existing ",(0,i.jsx)(s.code,{children:"DomainBlock"})," from the ",(0,i.jsx)(s.code,{children:"BlockTree"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["If this is the tip of ",(0,i.jsx)(s.code,{children:"BlockTree"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Add the ",(0,i.jsx)(s.code,{children:"bundle_extrinsics_root"})," to the ",(0,i.jsx)(s.code,{children:"execution_inbox"})]}),"\n",(0,i.jsxs)(s.li,{children:["Add the ",(0,i.jsx)(s.code,{children:"operator_id"})," to the ",(0,i.jsx)(s.code,{children:"operator_ids"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"If this is not the tip of the block tree and we have a stale ER, it is directly rejected and not included in the BlockTree at all."}),"\n",(0,i.jsxs)(t.c,{title:"Note",children:[(0,i.jsx)(s.p,{children:"Possible reasons a stale ER may occur:"}),(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"Network Latency"}),": Farmer produces a new consensus block, requiring execution of a new domain block. Operator A receives the new consensus block before Operator B, allowing it to execute faster (assuming static operators hardware). Assuming Operator A and B both produce a bundle at about the same time, and Operator A\u2019s bundle is included first by the consensus chain, then Operator B\u2019s bundle will be stale, since it points to an ER that is not part of the parent chain. This event should be rare, meaning that we could ignore applying the contents of these bundles from the point of view of the ",(0,i.jsx)(s.code,{children:"execution_inbox"}),". Ideally we would still be able track rewards and confirmation time for these bundles, as long as they are still ",(0,i.jsx)(s.em,{children:"recent"})," (i.e. within the confirmation depth of the block tree) to be fair and to properly handle execution time tracking."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"Execution Delays:"})," If we remove the static hardware assumption for operators (i.e. some operators can execute blocks faster than others), then the case above will be compounded and can even occur if we remove the concept of latency from the network. We have already discussed this at length, which is why we have the dynamic bundle sortition sector size to account for operators that are slow to execute blocks. The takeaways is that we still need to track these stale bundles so that we can set the dynamic sortition size appropriately."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.em,{children:"Execution Liveness Attack"}),": An operator intentionally submitted a stale ER to attempt to stall the apparent liveness of execution, as witnessed by the consensus chain. This may be done proportional to the amount of stake controlled by malicious operators. This can be mitigated by adding a rule that each operator must extend the last ER they submitted, perhaps by caching the last ER for an operator in the ",(0,i.jsx)(s.code,{children:"OperatorRegistry"}),". This would instead force operators to simply withhold bundles to engage in an execution liveness attack."]}),"\n"]})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["If any domain block reached ",(0,i.jsx)(s.code,{children:"BlockTreePruningDepth"}),", then we confirm it:","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"refund the bundle storage fees;"}),"\n",(0,i.jsx)(s.li,{children:"distribute the operator rewards;"}),"\n",(0,i.jsxs)(s.li,{children:["mark as pending slash the operators whose bundles this receipt marked as ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/fraud_proofs#invalid-bundle",children:"invalid"}),";"]}),"\n",(0,i.jsxs)(s.li,{children:["if ",(0,i.jsx)(s.code,{children:"StakeEpochDuration"})," has passed, do ",(0,i.jsx)(s.a,{href:"#domain-epoch-transition",children:"epoch transition"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Slash any operators (and their nominators) who are pending slash, but not more than ",(0,i.jsx)(s.code,{children:"MAX_NOMINATORS_TO_SLASH"})," at a time."]}),"\n",(0,i.jsx)(s.li,{children:"Accept this bundle as successful and awaiting execution on the domain."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"domain-epoch-transition",children:"Domain Epoch Transition"}),"\n",(0,i.jsx)(s.p,{children:"A domain staking epoch is an interval of blocks during which staking distribution remains the same. It is important to ensure a correct and provable @Bundle Producer Election that is not influenced short-term by deposits, withdrawals, and earned fees. This StakeEpochDuration period is currently set to 100 blocks, or roughly 10 minutes. The end of each epoch triggers a series of events to transition to the next epoch. These events include:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"allocation of fees earned for the blocks confirmed (older than BlockTreePruningDepth) during the epoch,"}),"\n",(0,i.jsx)(s.li,{children:"deposits and withdrawals of stake,"}),"\n",(0,i.jsx)(s.li,{children:"operator registrations and deregistrations,"}),"\n",(0,i.jsx)(s.li,{children:"recalculation of stake distribution for the slot leader VRF election."}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["An epoch transition occurs after every ",(0,i.jsx)(s.code,{children:"StakeEpochDuration"})," blocks (or when forced in a ",(0,i.jsx)(s.code,{children:"force_staking_epoch_transition(domain_id)"}),(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/interfaces#force_staking_epoch_transition",children:"extrinsic"}),") after all new bundles in the last block have been executed. During the domain epoch transition, we do the following steps:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Re-stake operators\u2019 nomination taxes on their rewards"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Each operator will get a cut of ",(0,i.jsx)(s.code,{children:"nomination_tax * current_epoch_fees"})," of all rewards issued to their pool as per ",(0,i.jsx)(s.code,{children:"nomination_tax"})," specified in the operator\u2019s config."]}),"\n",(0,i.jsxs)(s.li,{children:["The operator\u2019s cut will be automatically re-staked to the operator\u2019s nomination as a deposit. Operator\u2019s ",(0,i.jsx)(s.code,{children:"shares"}),", ",(0,i.jsx)(s.code,{children:"current_total_shares"})," and ",(0,i.jsx)(s.code,{children:"current_total_stake"})," will be updated with the corresponding deposit later when deposits are processed."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"current_epoch_fees"})," is temporarily updated to ",(0,i.jsx)(s.code,{children:"current_epoch_fees*(1-nomination_tax)"})," for the rest of the calculations during the epoch transitions. It will be reset to 0 for the new epoch."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"If there are any operators pending slash, remove their stake from the VRF election for the next epoch."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Finalize domain\u2019s staking summary."}),"\n",(0,i.jsx)(s.p,{children:"For each operator operating on the next epoch (existing and new operators), do the following:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Update the stake with received fees ",(0,i.jsx)(s.code,{children:"total_stake = current_total_stake + current_epoch_fees"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"OperatorEpochSharePrice"})," storage is updated with new share price (which excludes the collected nomination tax)."]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"share_price = (current_total_stake + current_epoch_fees) / total_shares"})}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Compute how much to reduce the stake corresponding to all ",(0,i.jsx)(s.code,{children:"withdrawals_in_epoch"})," unstaked shares ",(0,i.jsx)(s.code,{children:"total_stake=total_stake-withdrawals_in_epoch/share_price"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Compute how much to increase the stake corresponding to all ",(0,i.jsx)(s.code,{children:"deposits_in_epoch"})," as ",(0,i.jsx)(s.code,{children:"total_stake=total_stake+deposits_in_epoch*share_price"})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Set ",(0,i.jsx)(s.code,{children:"current_total_stake"})," and ",(0,i.jsx)(s.code,{children:"current_total_shares"})," to newly computed values and ",(0,i.jsx)(s.code,{children:"deposits_in_epoch"}),", ",(0,i.jsx)(s.code,{children:"withdrawals_in_epoch"})," and ",(0,i.jsx)(s.code,{children:"current_epoch_fees"})," to 0."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"As soon as the end of the epoch transition is finalized, the next epoch begins."}),"\n",(0,i.jsx)(s.h2,{id:"domain-block-production",children:"Domain Block Production"}),"\n",(0,i.jsxs)(s.p,{children:["The domain block is deterministically driven from the consensus block and always follows the ",(0,i.jsx)(s.a,{href:"#fork-choice-rule",children:"fork choice"})," of the consensus chain."]}),"\n",(0,i.jsxs)(s.p,{children:["The operator subscribes to the consensus block import notification, and for each imported consensus block the operator tries to build a domain block of defined ",(0,i.jsx)(s.a,{href:"/protocol-specs/docs/decex/bundles_blocks#domain-blocks",children:"structure"})," by constructing the following components:"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Block Body"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Extract the bundles of the domain, which the operator registered, from the consensus block and extract the extrinsics from the bundles.","\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"If there is no bundle, skip producing domain block for this consensus block"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Extrinsics will be ordered as described in ",(0,i.jsx)(s.a,{href:"#cryptographic-sortition-for-extrinsic-ordering",children:"Cryptographic sortition for Extrinsic ordering"})]}),"\n",(0,i.jsx)(s.li,{children:"The resulting extrinsics will be used as the block body"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Extrinsics Root"})}),"\n",(0,i.jsx)(s.p,{children:"Merkle tree root of the extrinsics"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"State Root"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Execute the block body by following the instructions mentioned at ",(0,i.jsx)(s.a,{href:"#domain-block-execution-on-the-operator-node",children:"Domain Block Execution on the Operator Node"})]}),"\n",(0,i.jsx)(s.li,{children:"The state root after execution will be used as the state root in the block header"}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Parent Block"})}),"\n",(0,i.jsxs)(s.p,{children:["The parent block should be the last domain block that drives from the same branch as the incoming consensus block following the consensus chain ",(0,i.jsx)(s.a,{href:"#fork-choice-rule",children:"Fork Choice Rule"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Example"})}),"\n",(0,i.jsxs)(s.p,{children:["Consensus chain:  ",(0,i.jsx)(s.code,{children:".. \u2192 b1 \u2192 b2 \u2192 b3 \u2192 b4"})," , ",(0,i.jsx)(s.code,{children:"b4"})," is the incoming consensus block that the operator trying to drive a domain block, while ",(0,i.jsx)(s.code,{children:"b2"})," and ",(0,i.jsx)(s.code,{children:"b3"})," didn\u2019t drive a domain block due to not bundle contains inside them, the last domain block of this branch is the one driving from ",(0,i.jsx)(s.code,{children:"b1"})," thus it will be used as parent block of the domain block driving from ",(0,i.jsx)(s.code,{children:"b4"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"cryptographic-sortition-for-extrinsic-ordering",children:"Cryptographic sortition for Extrinsic ordering"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Deduplicate extrinsics."}),"\n",(0,i.jsxs)(s.li,{children:["Group the signed extrinsics by sender ",(0,i.jsx)(s.code,{children:"account_id"}),", and unsigned extrinsics into a separate group."]}),"\n",(0,i.jsxs)(s.li,{children:["Use the consensus chain ",(0,i.jsx)(s.code,{children:"Randomness"})," derived from PoT as ",(0,i.jsx)(s.code,{children:"extrinsics_shuffling_seed"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Shuffle the grouped extrinsics using the Fisher\u2013Yates algorithm based on the ",(0,i.jsx)(s.code,{children:"extrinsics_shuffling_seed"}),".\nThis generates an unbiased and deterministic permutation, while relative ordering for the transactions for the same sender does not change."]}),"\n"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"Example"})}),"\n",(0,i.jsxs)(s.p,{children:["Before grouping:",(0,i.jsx)(s.code,{children:"(Alice, 1), (-, 1), (Bob, 1), (Bob, 2), (Alice,2), (Charlie, 1), (Alice,3), (Charlie, 2), (-,2), (-,3)"})," ",(0,i.jsx)(s.code,{children:"(-)"})," for unsigned"]}),"\n",(0,i.jsxs)(s.p,{children:["After grouping: ",(0,i.jsx)(s.code,{children:"(Alice, 1), (Alice,2), (Alice,3), (Bob, 1), (Bob, 2), (Charlie, 1), (Charlie, 2), (-, 1), (-,2), (-,3)"})]}),"\n",(0,i.jsxs)(s.p,{children:["After shuffle: ",(0,i.jsx)(s.code,{children:"(-, 1), (Charlie, 1), (Alice, 1), (Bob, 1), (Alice,2), (-,2), (Charlie, 2), (Alice,3), (-,3), (Bob, 2)"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"fork-choice-rule",children:"Fork Choice Rule"}),"\n",(0,i.jsxs)(s.p,{children:["The consensus chain uses ",(0,i.jsx)(s.a,{href:"https://github.com/subspace/subspace/blob/b72d865aa776f3088e37808c02c1468333e213d8/crates/sc-consensus-subspace/src/lib.rs#L1154-L1155",children:"the heaviest chain rule"})," (i.e., smallest solution range) if forks have the same weight go with the longest one, while the domain chain always follows the fork choice of the consensus chain regardless of whether the domain fork is the longest fork or not."]}),"\n",(0,i.jsx)(s.p,{children:"Consensus chain (assume every block has the same weight):"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-jsx",children:"     b2 \u2192 b3 \u2192 b4\n    /\n\u2192 a1 \u2192 a2 \u2192 a3 \u2192 a4 \u2192 a5 \n"})}),"\n",(0,i.jsxs)(s.p,{children:["Given domain chain, the consensus block ",(0,i.jsx)(s.code,{children:"a3"})," and ",(0,i.jsx)(s.code,{children:"a4"})," don\u2019t contain bundles thus there is no domain block driving from them:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-jsx",children:"            domain_b2 \u2192 domain_b3 \u2192 domain_b4\n          /\n\u2192 domain_a1 \u2192 domain_a2 \u2192 domain_a5\n"})}),"\n",(0,i.jsx)(s.p,{children:"The best fork of the consensus chain is fork A as it is the longest fork, and the domain chain always follows the fork choice of the consensus chain thus its best fork is also fork A even though it is not the longest fork."}),"\n",(0,i.jsx)(s.h2,{id:"domain-block-execution-on-the-operator-node",children:"Domain Block Execution on the Operator Node"}),"\n",(0,i.jsxs)(s.p,{children:["The main distinction between domain block execution and normal Substrate block execution lies in the calculation and collection of the storage root after completing each execution phase (",(0,i.jsx)(s.code,{children:"InitializeBlock"}),", ",(0,i.jsx)(s.code,{children:"ApplyExtrinsic"}),", ",(0,i.jsx)(s.code,{children:"FinalizeBlock"}),"). The storage roots collected during the process create an execution trace. This trace is then utilized to identify precise computational discrepancies within the fraud proof."]}),"\n",(0,i.jsxs)(s.p,{children:["In Substrate, there is a trait ",(0,i.jsx)(s.a,{href:"https://paritytech.github.io/substrate/master/frame_support/traits/trait.Hooks.html",children:(0,i.jsx)(s.code,{children:"Hooks"})})," that each pallet can implement to execute some logic during the block execution, the related hooks here are ",(0,i.jsx)(s.code,{children:"on_initialize"})," and ",(0,i.jsx)(s.code,{children:"on_finalize"}),". A block with ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"n"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," extrinsics in Substrate is primarily executed as follows:"]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/blob/689da495a0c0c0c2466fe90a9ea187ce56760f2d/frame/executive/src/lib.rs#L396",children:"Initialization"})," ",(0,i.jsx)(s.code,{children:"initialize_block(header)"})]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Execute the ",(0,i.jsx)(s.code,{children:"on_runtime_upgrade"})," hooks if the runtime has been upgraded"]}),"\n",(0,i.jsxs)(s.li,{children:["Initialize ",(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/tree/master/frame/system",children:"System module"})," pallet"]}),"\n",(0,i.jsxs)(s.li,{children:["Execute the ",(0,i.jsx)(s.code,{children:"on_initialize"})," hook of all non-system pallets"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["After executing ",(0,i.jsx)(s.code,{children:"initialize_block"}),", we calculate the first state root as ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mn,{children:"0"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_{0}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"0"})})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Execute the ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"n"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," extrinsics one by one using ",(0,i.jsx)(s.code,{children:"apply_extrinsic(uxt)"})," ",(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/blob/689da495a0c0c0c2466fe90a9ea187ce56760f2d/frame/executive/src/lib.rs#L549",children:"method"})]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Apply extrinsic 0 \u21d2 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mn,{children:"1"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_{1}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})]}),"\n",(0,i.jsxs)(s.li,{children:["Apply extrinsic 1 \u21d2 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mn,{children:"2"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_2"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"2"})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})]}),"\n",(0,i.jsx)(s.li,{children:"\u2026"}),"\n",(0,i.jsxs)(s.li,{children:["Apply extrinsic ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"n"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]}),"-1 \u21d2 ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mi,{children:"n"})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_{n}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8333em",verticalAlign:"-0.15em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.1514em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"})})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["After executing each extrinsic, we calculate the state root as ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"{"}),(0,i.jsx)(s.mn,{children:"1"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mn,{children:"2"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{stretchy:"false",children:"}"})]})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_{\\{1, 2, .., n\\}}"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1.0385em",verticalAlign:"-0.3552em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3448em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.5198em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mopen mtight",children:"{"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"}),(0,i.jsx)(s.span,{className:"mpunct mtight",children:","}),(0,i.jsx)(s.span,{className:"mord mtight",children:"2"}),(0,i.jsx)(s.span,{className:"mpunct mtight",children:","}),(0,i.jsx)(s.span,{className:"mord mtight",children:".."}),(0,i.jsx)(s.span,{className:"mpunct mtight",children:","}),(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(s.span,{className:"mclose mtight",children:"}"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3552em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]})]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://github.com/paritytech/substrate/blob/689da495a0c0c0c2466fe90a9ea187ce56760f2d/frame/executive/src/lib.rs#L515",children:"Finalization"})," ",(0,i.jsx)(s.code,{children:"finalize_block()"})]}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Execute ",(0,i.jsx)(s.code,{children:"on_idle"})," hook if there are still some weights remaining"]}),"\n",(0,i.jsxs)(s.li,{children:["Execute the ",(0,i.jsx)(s.code,{children:"on_finalize"})," hook of all non-system pallets"]}),"\n",(0,i.jsx)(s.li,{children:"Finalize system pallet"}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["After executing ",(0,i.jsx)(s.code,{children:"finalize_block()"}),", we calculate the state root as ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]})]})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"Root_{ n+1 }"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.8917em",verticalAlign:"-0.2083em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(s.span,{className:"mbin mtight",children:"+"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2083em"},children:(0,i.jsx)(s.span,{})})})]})})]})]})})]}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Therefore, the execution trace for a block with  ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsx)(s.mrow,{children:(0,i.jsx)(s.mi,{children:"n"})}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"n"})]})})]})," extrinsics is ",(0,i.jsxs)(s.span,{className:"katex",children:[(0,i.jsx)(s.span,{className:"katex-mathml",children:(0,i.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(s.semantics,{children:[(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mo,{stretchy:"false",children:"["}),(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mn,{children:"0"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsx)(s.mn,{children:"1"})]}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mo,{children:"\u2026"}),(0,i.jsx)(s.mo,{separator:"true",children:","}),(0,i.jsx)(s.mi,{children:"R"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsx)(s.mi,{children:"o"}),(0,i.jsxs)(s.msub,{children:[(0,i.jsx)(s.mi,{children:"t"}),(0,i.jsxs)(s.mrow,{children:[(0,i.jsx)(s.mi,{children:"n"}),(0,i.jsx)(s.mo,{children:"+"}),(0,i.jsx)(s.mn,{children:"1"})]})]}),(0,i.jsx)(s.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(s.annotation,{encoding:"application/x-tex",children:"[Root_{0}, Root_{1}, \u2026, Root_{n+1}]"})]})})}),(0,i.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(s.span,{className:"base",children:[(0,i.jsx)(s.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(s.span,{className:"mopen",children:"["}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"0"})})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"minner",children:"\u2026"}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mpunct",children:","}),(0,i.jsx)(s.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.00773em"},children:"R"}),(0,i.jsx)(s.span,{className:"mord mathnormal",children:"oo"}),(0,i.jsxs)(s.span,{className:"mord",children:[(0,i.jsx)(s.span,{className:"mord mathnormal",children:"t"}),(0,i.jsx)(s.span,{className:"msupsub",children:(0,i.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,i.jsxs)(s.span,{className:"vlist-r",children:[(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.3011em"},children:(0,i.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,i.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsxs)(s.span,{className:"mord mtight",children:[(0,i.jsx)(s.span,{className:"mord mathnormal mtight",children:"n"}),(0,i.jsx)(s.span,{className:"mbin mtight",children:"+"}),(0,i.jsx)(s.span,{className:"mord mtight",children:"1"})]})})]})}),(0,i.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,i.jsx)(s.span,{className:"vlist-r",children:(0,i.jsx)(s.span,{className:"vlist",style:{height:"0.2083em"},children:(0,i.jsx)(s.span,{})})})]})})]}),(0,i.jsx)(s.span,{className:"mclose",children:"]"})]})})]})]}),"\n",(0,i.jsx)(s.h2,{id:"domain-sudo",children:"Domain Sudo"}),"\n",(0,i.jsxs)(s.p,{children:["Domains have a modified pallet to provide sudo call. The Sudo is triggerred from the Consensus chain and then executed in the Domain block.\n",(0,i.jsx)(s.code,{children:"pallet_domain_sudo"})," has a inherent extrinsic that is created and imported into Domain block if the Consensus block from which Domain block is created\nfrom contains a Sudo Call for the targetted Domain. Only one sudo call is allowed per domain block. Multiple Call can be achieved using ",(0,i.jsx)(s.code,{children:"pallet_utility::BatchAll"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"flow-to-execute-a-sudo-call-on-domain",children:"Flow to execute a Sudo call on Domain."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Sudo on Consensus chain will submit an encoded unsigned domain extrinsic to ",(0,i.jsx)(s.code,{children:"pallet_domains::Call::send_domain_sudo_call"})]}),"\n",(0,i.jsxs)(s.li,{children:["If the targetted domain has the ",(0,i.jsx)(s.code,{children:"pallet_domain_sudo"})," enabled, then the encoded call is stored.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Note: This storage is cleared on Consensus chain when there is a Successful bundle submission from the Domain."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["When domain operators are deriving a Domain Block from a given Consensus block, they check ",(0,i.jsx)(s.code,{children:"pallet_domains::domain_sudo_call(domain_id)"})," if there is any sudo call."]}),"\n",(0,i.jsxs)(s.li,{children:["If so, they will inject this Domain sudo Call as an Inherent extrinsic and executes the Domain block.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Note: ",(0,i.jsx)(s.code,{children:"pallet_domain_sudo"})," executed the provided the encoded domain call with ",(0,i.jsx)(s.code,{children:"Root"})," origin."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Since ",(0,i.jsx)(s.code,{children:"pallet_domain_sudo"})," provides an Unsigned extrinsic, if this extrinsic is manually constructed and included in the Domain Block, it will trigger\n",(0,i.jsx)(s.code,{children:"FraudProof::InherentExtrinsic"})," from the honest operators."]}),"\n",(0,i.jsxs)(s.p,{children:["This inherent extrinsic also affects the ",(0,i.jsx)(s.code,{children:"FraudProof::InvalidDomainExtrinsicRoot"})," if any malicious operator does not include this inherent while importing Domain block.\nHonest operators will submit above FraudProof variant with all the necessary storage proofs to construct the Domain Extrinsic root."]}),"\n",(0,i.jsx)(s.h2,{id:"lagging-operator-protection",children:"Lagging operator protection"}),"\n",(0,i.jsx)(s.p,{children:"In a distributed system, it is inevitable that some nodes may be lagging (e.g. due to network partition or slow hardware). This is critical for the operator node because when it produces a bundle, it needs to verify and guarantee all the extrinsic included in the bundle is valid. When the domain node tries to derive a new domain block from the bundles included in the consensus block, it will also verify all the extrinsic against the latest domain block (i.e. the parent domain block of the new block), if there is any invalid extrinsic found the whole bundle will be marked as invalid and the operator who produced this bundle will be slashed."}),"\n",(0,i.jsx)(s.p,{children:"For a lagging operator, it is possible that when producing a bundle it verifies the extrinsic against an old domain block, and the extrinsic turns out to be invalid when other domain nodes verify it against the latest domain block, as a result, an honest but lagging operator will be slashed."}),"\n",(0,i.jsx)(s.p,{children:"To protect the lagging operator, the consensus node when verifying the bundle will check the bundle contains an execution receipt that is derived from the latest domain block, which means the producer is not lagging, if it is not then the bundle will not be included in the consensus block so the operator won't be slashed."}),"\n",(0,i.jsxs)(s.p,{children:["The consensus node when performing this check also needs to ensure the execution receipt is extending the previous head receipt, this means if there is a gap between the latest domain block (i.e. ",(0,i.jsx)(s.code,{children:"HeadDomainNumber"}),") and the latest receipt on chain (i.e. ",(0,i.jsx)(s.code,{children:"HeadReceiptNumber"}),"), which usually happen after a fraud proof is accepted and bad receipts were pruned, any bundle will be rejected. In this case, the operator needs to produce ",(0,i.jsx)(s.code,{children:"submit_receipt"})," to fill up the gap and after that they can resume producing ",(0,i.jsx)(s.code,{children:"submit_bundle"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"domain-freeze-unfreeze-and-prune-execution-receipt-by-consensus-sudo",children:"Domain Freeze, Unfreeze, and Prune Execution Receipt by Consensus Sudo"}),"\n",(0,i.jsx)(s.p,{children:"Generally, malicious activity from a domain operator is handled through Fraud proofs where honest operators verify the bundles before importing domain block and submit\nFraud proof targeted at given bad Execution receipt. In a particular case where Fraud proof could not be verified automatically or included in the\nConsensus block, the bad ER never gets pruned and given enough time, it may even go out of challenge period."}),"\n",(0,i.jsx)(s.p,{children:"In order to safe-guard against such an attack, Sudo on Consensus has the ability to Freeze, Unfreeze, and prune execution receipt of a domain."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"pallet_domains::Call::freeze_domain(domain_id)\npallet_domains::Call::unfreeze_domain(domain_id)\npallet_domains::Call::prune_execution_receipt(domain_id, bad_er_hash)\n"})}),"\n",(0,i.jsx)(s.p,{children:"The prune execution receipt dispatch makes an assumption that Sudo has validated the invalidity of the bad ER by verifying it offchain and/or through social consensus\nif the Governance is at play."}),"\n",(0,i.jsx)(s.p,{children:"Note: Domain must be frozen to stop accepting new bundles before pruning a execution receipt."})]})}function m(e={}){const{wrapper:s}={...(0,a.M)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},4916:(e,s,n)=>{n.d(s,{c:()=>t});var i=n(1504),a=n(7624);const t=e=>{let{title:s,children:n}=e;const[t,l]=(0,i.useState)(!1);return(0,a.jsxs)("div",{className:"collapsible",children:[(0,a.jsxs)("button",{className:"collapsible-toggle",onClick:()=>l(!t),children:[t?"\u25bc":"\u25ba"," ",s]}),(0,a.jsx)("div",{className:"collapsible-content "+(t?"open":""),children:t&&n})]})}},2172:(e,s,n)=>{n.d(s,{I:()=>r,M:()=>l});var i=n(1504);const a={},t=i.createContext(a);function l(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);